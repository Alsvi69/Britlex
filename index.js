// const userq = {
//   name: "Jacques Gluke",
//   tag: "jgluke",
//   location: {
//     country: "Jamaica",
//     city: "Ocho Rios",
//   },
//   hobbies: ["swiming", "music", "sci-fi"],
// };

// const location = userq.location;
// console.log(location); // –û–±'—î–∫—Ç location

// const country = userq.location.country;
// console.log(country); // 'Jamaica'

// const book = {
//   title: "The Last Kingdom",
//   author: "Bernard Cornwell",
//   genres: ["historical prose", "adventure"],
//   isPublic: true,
//   rating: 8.38,
// };

// const bookTitle = book.title;
// console.log(bookTitle); // 'The Last Kingdom'

// const bookGenres = book["genres"];
// console.log(bookGenres); // ['historical prose', 'adventurs']

// const propKey = "author";
// const bookAuthor = book[propKey];
// console.log(bookAuthor); // 'Bernard Cornwell'

// const book = {
//   title: "The Last Kingdom",
//   author: "Bernard Cornwell",
//   genres: ["historical prose", "adventure"],
//   isPublic: true,
//   rating: 8.38,
// };

// book.pageCount = 836;
// book.originalLanguage = "en";
// book.translations = ["ua", "ru"];

// console.log(book.pageCount); // 836
// console.log(book.originalLanguage); // 'en'
// console.log(book.translations); // ['ua', 'ru']

// // ‚úÖ –õ–æ–≥—ñ—á–Ω–æ —ñ —Å–∏–Ω—Ç–∞–∫—Å–∏—á–Ω–æ –∑–≥—Ä—É–ø–æ–≤–∞–Ω—ñ —Å—É—Ç–Ω–æ—Å—Ç—ñ
// const bookShelf = {
//   books: ["The Last Kingdom", "Dream Guardian"],
//   // –¶–µ –º–µ—Ç–æ–¥ –æ–±'—î–∫—Ç–∞
//   getBooks() {
//     console.log("–¶–µ–π –º–µ—Ç–æ–¥ –±—É–¥–µ –ø–æ–≤–µ—Ä—Ç–∞—Ç–∏ –≤—Å—ñ –∫–Ω–∏–≥–∏ - –≤–ª–∞—Å—Ç–∏–≤—ñ—Å—Ç—å books");
//   },
//   // –¶–µ –º–µ—Ç–æ–¥ –æ–±'—î–∫—Ç–∞
//   addBook(bookName) {
//     console.log("–¶–µ–π –º–µ—Ç–æ–¥ –±—É–¥–µ –¥–æ–¥–∞–≤–∞—Ç–∏ –Ω–æ–≤—É –∫–Ω–∏–≥—É —É –≤–ª–∞—Å—Ç–∏–≤—ñ—Å—Ç—å books");
//   },
// };

// // –í–∏–∫–ª–∏–∫–∏ –º–µ—Ç–æ–¥—ñ–≤
// // bookShelf.getBooks();
// // bookShelf.addBook("–ù–æ–≤–∞ –∫–Ω–∏–≥–∞");
// const book = {
//   title: "The Last Kingdom",
//   author: "Bernard Cornwell",
//   genres: ["historical prose", "adventure"],
//   rating: 8.38,
// };

// for (const key in book) {
//   // –Ø–∫—â–æ —Ü–µ –≤–ª–∞—Å–Ω–∞ –≤–ª–∞—Å—Ç–∏–≤—ñ—Å—Ç—å - –≤–∏–∫–æ–Ω—É—î–º–æ —Ç—ñ–ª–æ if
//   if (book.hasOwnProperty(key)) {
//     console.log(key, book[key]);
//     // console.log(book[key]);
//   }

//   // –Ø–∫—â–æ —Ü–µ –Ω–µ–≤–ª–∞—Å–Ω–∞ –≤–ª–∞—Å—Ç–∏–≤—ñ—Å—Ç—å - –Ω—ñ—á–æ–≥–æ –Ω–µ —Ä–æ–±–∏–º–æ
// }

// const book = {
//   title: "The Last Kingdom",
//   author: "Bernard Cornwell",
//   genres: ["historical prose", "adventure"],
//   rating: 8.38,
// };
// const keys = Object.keys(book);

// for (const key of keys) {
//   // –ö–ª—é—á
//   console.log(key);
//   // –ó–Ω–∞—á–µ–Ω–Ω—è –≤–ª–∞—Å—Ç–∏–≤–æ—Å—Ç—ñ
//   console.log(book[key]);
// }

// const goods = {
//   apples: 6,
//   grapes: 3,
//   bread: 4,
//   cheese: 7,
// };

// const values = Object.values(goods); // [6, 3, 4, 7]

// let total = 0;

// for (const value of values) {
//   total += value;
// }

// console.log(total); // 20

// const apartment = {
//   imgUrl: "https://via.placeholder.com/640x480",
//   descr: "Spacious apartment in the city center",
//   rating: 4,
//   price: 2153,
//   tags: ["premium", "promoted", "top"],
//   owner: {
//     name: "Henry",
//     phone: "982-126-1588",
//     email: "henry.carter@aptmail.com",
//   },
// };
// apartment.price = 5000;
// apartment.rating = 4.7;
// apartment.owner.name = "Henry Sibola";
// apartment.tags = ["premium", "promoted", "top", "trusted"];
// console.log(apartment.tags);

// Task - 1
// –ù–∞–ø–∏—à—ñ—Ç—å –Ω–∞—Å—Ç—É–ø–Ω—ñ —Ñ—É–Ω–∫—Ü—ñ—ó:
// createProduct(obj, callback) - –ø—Ä–∏–π–º–∞—î –æ–±'—î–∫—Ç —Ç–æ–≤–∞—Ä—É –±–µ–∑ id, –∞ —Ç–∞–∫–æ–∂ –∫–æ–ª–ª–±–µ–∫. –§—É–Ω–∫—Ü—ñ—è —Å—Ç–≤–æ—Ä—é—î –æ–±'—î–∫—Ç —Ç–æ–≤–∞—Ä—É, –¥–æ–¥–∞—é—á–∏ –π–æ–º—É —É–Ω—ñ–∫–∞–ª—å–Ω–∏–π —ñ–¥–µ–Ω—Ç–∏—Ñ—ñ–∫–∞—Ç–æ—Ä —É –≤–ª–∞—Å—Ç–∏–≤—ñ—Å—Ç—å id —Ç–∞ –≤–∏–∫–ª–∏–∫–∞—î –∫–æ–ª–ª–±–µ–∫ –ø–µ—Ä–µ–¥–∞—é—á–∏ –π–æ–º—É —Å—Ç–≤–æ—Ä–µ–Ω–∏–π –æ–±'—î–∫—Ç.
// logProduct(product) - –∫–æ–ª–±–±–µ–∫ —â–æ –ø—Ä–∏–π–º–∞—î –æ–±'—î–∫—Ç –ø—Ä–æ–¥—É–∫—Ç—É —ñ –ª–æ–≥—É—é—á–∏–π –π–æ–≥–æ –≤ –∫–æ–Ω—Å–æ–ª—å
// logTotalPrice(product) - –∫–æ–ª–±–±–µ–∫, —â–æ –ø—Ä–∏–π–º–∞—î –æ–±'—î–∫—Ç –ø—Ä–æ–¥—É–∫—Ç—É —ñ –ª–æ–≥—ñ—é—î –∑–∞–≥–∞–ª—å–Ω—É –≤–∞—Ä—Ç—ñ—Å—Ç—å —Ç–æ–≤–∞—Ä—É –≤ –∫–æ–Ω—Å–æ–ª—å

// function createProduct(obj, callback) {
//   const product = {
//     id: Date.now(),
//     ...obj,
//   };
//   callback(product);
// }

// function logProduct(product) {
//   console.log(product);
// }

// function logTotalPrice({ name, price, quantity }) {
//   console.log(`Product ${name} total price ${price * quantity}`);
// }

// createProduct({ name: "üçé", price: 30, quantity: 3 }, logProduct);
// createProduct({ name: 'üçã', price: 20, quantity: 5 }, logTotalPrice);
// createProduct({ name: "üçé", price: 30, quantity: 3 }, logTotalPrice);

// –ö–æ–ª–±–µ–∫-—Ñ—É–Ω–∫—Ü—ñ—è
// function greet(name) {
//   console.log(`–õ–∞—Å–∫–∞–≤–æ –ø—Ä–æ—Å–∏–º–æ ${name}.`);
// }

// // –§—É–Ω–∫—Ü—ñ—è –≤–∏—â–æ–≥–æ –ø–æ—Ä—è–¥–∫—É
// function registerGuest(name, callback) {
//   console.log(`–†–µ—î—Å—Ç—Ä—É—î–º–æ –≥–æ—Å—Ç—è ${name}.`);
//   callback(name);
// }

// registerGuest("–ú–∞–Ω–≥–æ", greet);

// function processCall(recipient) {
//   // –Ü–º—ñ—Ç—É—î–º–æ –¥–æ—Å—Ç—É–ø–Ω—ñ—Å—Ç—å –∞–±–æ–Ω–µ–Ω—Ç–∞ –≤–∏–ø–∞–¥–∫–æ–≤–∏–º —á–∏—Å–ª–æ–º
//   const isRecipientAvailable = Math.random() > 0.5;

//   if (!isRecipientAvailable) {
//     console.log(`–ê–±–æ–Ω–µ–Ω—Ç ${recipient} –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∏–π, –∑–∞–ª–∏—à—Ç–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è.`);
//     // –õ–æ–≥—ñ–∫–∞ –∞–∫—Ç–∏–≤–∞—Ü—ñ—ó –∞–≤—Ç–æ–≤—ñ–¥–ø–æ–≤—ñ–¥–∞—á–∞
//   } else {
//     console.log(`–ó'—î–¥–Ω—É—î–º–æ –∑ ${recipient}, –æ—á—ñ–∫—É–π—Ç–µ...`);
//     // –õ–æ–≥—ñ–∫–∞ –ø—Ä–∏–π–Ω—è—Ç—Ç—è –¥–∑–≤—ñ–Ω–∫–∞
//   }
// }

// processCall("–ú–∞–Ω–≥–æ");

function processCall(recipient, onAvailable, onNotAvailable) {
  // –Ü–º—ñ—Ç—É—î–º–æ –¥–æ—Å—Ç—É–ø–Ω—ñ—Å—Ç—å –∞–±–æ–Ω–µ–Ω—Ç–∞ –≤–∏–ø–∞–¥–∫–æ–≤–∏–º —á–∏—Å–ª–æ–º
  const isRecipientAvailable = Math.random() > 0.5;

  if (!isRecipientAvailable) {
    onNotAvailable(recipient);
    return;
  }

  onAvailable(recipient);
}

function takeCall(name) {
  console.log(`–ó'—î–¥–Ω—É—î–º–æ –∑ ${name}, –æ—á—ñ–∫—É–π—Ç–µ...`);
  // –õ–æ–≥—ñ–∫–∞ –ø—Ä–∏–π–Ω—è—Ç—Ç—è –¥–∑–≤—ñ–Ω–∫–∞
}

function activateAnsweringMachine(name) {
  console.log(`–ê–±–æ–Ω–µ–Ω—Ç ${name} –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∏–π, –∑–∞–ª–∏—à—Ç–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è.`);
  // –õ–æ–≥—ñ–∫–∞ –∞–∫—Ç–∏–≤–∞—Ü—ñ—ó –∞–≤—Ç–æ–≤—ñ–¥–ø–æ–≤—ñ–¥–∞—á–∞
}

function leaveHoloMessage(name) {
  console.log(`–ê–±–æ–Ω–µ–Ω—Ç ${name} –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∏–π, –∑–∞–ø–∏—Å—É—î–º–æ –≥–æ–ª–æ–≥—Ä–∞–º—É.`);
  // –õ–æ–≥—ñ–∫–∞ –∑–∞–ø–∏—Å—É –≥–æ–ª–æ–≥—Ä–∞–º–∏
}

processCall("–ú–∞–Ω–≥–æ", takeCall, activateAnsweringMachine);
processCall("–ü–æ–ª—ñ", takeCall, leaveHoloMessage);